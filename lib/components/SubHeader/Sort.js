/**
 * 
 * @file Content sub header component
 * @author Box
 */

import React from 'react';
import { SORT_ASC, SORT_DESC, SORT_NAME, SORT_DATE, SORT_SIZE, FIELD_NAME, FIELD_MODIFIED_AT, FIELD_INTERACTED_AT, FIELD_SIZE } from '../../constants';
import DropdownMenu from '../DropdownMenu';
import { Menu, MenuItem } from '../Menu';
import { Button } from '../Button';
import IconSort from '../icons/IconSort';
import IconCheck from '../icons/IconCheck';


function getMenuItem(sort, by, direction, sortBy, sortDirection, onSortChange, getLocalizedMessage) {
    var isSame = by === sortBy && direction === sortDirection;
    return React.createElement(
        MenuItem,
        { onClick: function onClick() {
                return onSortChange(by, direction);
            } },
        React.createElement(
            'div',
            { className: 'buik-sort-selected' },
            isSame ? React.createElement(IconCheck, { width: 12, height: 10 }) : null
        ),
        getLocalizedMessage('buik.sort.option.' + sort + '.' + direction.toLowerCase())
    );
}

var Sort = function Sort(_ref) {
    var isRecents = _ref.isRecents,
        isLoaded = _ref.isLoaded,
        sortBy = _ref.sortBy,
        sortDirection = _ref.sortDirection,
        onSortChange = _ref.onSortChange,
        getLocalizedMessage = _ref.getLocalizedMessage;
    return React.createElement(
        DropdownMenu,
        { isRightAligned: true, constrainToScrollParent: true },
        React.createElement(
            Button,
            { isDisabled: !isLoaded, className: 'buik-sort-btn' },
            React.createElement(IconSort, null)
        ),
        React.createElement(
            Menu,
            { className: 'buik-sort' },
            getMenuItem(SORT_NAME, FIELD_NAME, SORT_ASC, sortBy, sortDirection, onSortChange, getLocalizedMessage),
            getMenuItem(SORT_NAME, FIELD_NAME, SORT_DESC, sortBy, sortDirection, onSortChange, getLocalizedMessage),
            getMenuItem(SORT_DATE, isRecents ? FIELD_INTERACTED_AT : FIELD_MODIFIED_AT, SORT_ASC, sortBy, sortDirection, onSortChange, getLocalizedMessage),
            getMenuItem(SORT_DATE, isRecents ? FIELD_INTERACTED_AT : FIELD_MODIFIED_AT, SORT_DESC, sortBy, sortDirection, onSortChange, getLocalizedMessage),
            getMenuItem(SORT_SIZE, FIELD_SIZE, SORT_ASC, sortBy, sortDirection, onSortChange, getLocalizedMessage),
            getMenuItem(SORT_SIZE, FIELD_SIZE, SORT_DESC, sortBy, sortDirection, onSortChange, getLocalizedMessage)
        )
    );
};

export default Sort;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNvcnQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJTT1JUX0FTQyIsIlNPUlRfREVTQyIsIlNPUlRfTkFNRSIsIlNPUlRfREFURSIsIlNPUlRfU0laRSIsIkZJRUxEX05BTUUiLCJGSUVMRF9NT0RJRklFRF9BVCIsIkZJRUxEX0lOVEVSQUNURURfQVQiLCJGSUVMRF9TSVpFIiwiRHJvcGRvd25NZW51IiwiTWVudSIsIk1lbnVJdGVtIiwiQnV0dG9uIiwiSWNvblNvcnQiLCJJY29uQ2hlY2siLCJnZXRNZW51SXRlbSIsInNvcnQiLCJieSIsImRpcmVjdGlvbiIsInNvcnRCeSIsInNvcnREaXJlY3Rpb24iLCJvblNvcnRDaGFuZ2UiLCJnZXRMb2NhbGl6ZWRNZXNzYWdlIiwiaXNTYW1lIiwidG9Mb3dlckNhc2UiLCJTb3J0IiwiaXNSZWNlbnRzIiwiaXNMb2FkZWQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFNQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsU0FDSUMsUUFESixFQUVJQyxTQUZKLEVBR0lDLFNBSEosRUFJSUMsU0FKSixFQUtJQyxTQUxKLEVBTUlDLFVBTkosRUFPSUMsaUJBUEosRUFRSUMsbUJBUkosRUFTSUMsVUFUSixRQVVPLGlCQVZQO0FBV0EsT0FBT0MsWUFBUCxNQUF5QixpQkFBekI7QUFDQSxTQUFTQyxJQUFULEVBQWVDLFFBQWYsUUFBK0IsU0FBL0I7QUFDQSxTQUFTQyxNQUFULFFBQXVCLFdBQXZCO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQixtQkFBckI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLG9CQUF0Qjs7O0FBYUEsU0FBU0MsV0FBVCxDQUNJQyxJQURKLEVBRUlDLEVBRkosRUFHSUMsU0FISixFQUlJQyxNQUpKLEVBS0lDLGFBTEosRUFNSUMsWUFOSixFQU9JQyxtQkFQSixFQVEyQjtBQUN2QixRQUFNQyxTQUFTTixPQUFPRSxNQUFQLElBQWlCRCxjQUFjRSxhQUE5QztBQUNBLFdBQ0k7QUFBQyxnQkFBRDtBQUFBLFVBQVUsU0FBUztBQUFBLHVCQUFNQyxhQUFhSixFQUFiLEVBQWlCQyxTQUFqQixDQUFOO0FBQUEsYUFBbkI7QUFDSTtBQUFBO0FBQUEsY0FBSyxXQUFVLG9CQUFmO0FBQ0tLLHFCQUFTLG9CQUFDLFNBQUQsSUFBVyxPQUFPLEVBQWxCLEVBQXNCLFFBQVEsRUFBOUIsR0FBVCxHQUFnRDtBQURyRCxTQURKO0FBSUtELGtEQUF3Q04sSUFBeEMsU0FBZ0RFLFVBQVVNLFdBQVYsRUFBaEQ7QUFKTCxLQURKO0FBUUg7O0FBRUQsSUFBTUMsT0FBTyxTQUFQQSxJQUFPO0FBQUEsUUFBR0MsU0FBSCxRQUFHQSxTQUFIO0FBQUEsUUFBY0MsUUFBZCxRQUFjQSxRQUFkO0FBQUEsUUFBd0JSLE1BQXhCLFFBQXdCQSxNQUF4QjtBQUFBLFFBQWdDQyxhQUFoQyxRQUFnQ0EsYUFBaEM7QUFBQSxRQUErQ0MsWUFBL0MsUUFBK0NBLFlBQS9DO0FBQUEsUUFBNkRDLG1CQUE3RCxRQUE2REEsbUJBQTdEO0FBQUEsV0FDVDtBQUFDLG9CQUFEO0FBQUEsVUFBYyxvQkFBZCxFQUE2Qiw2QkFBN0I7QUFDSTtBQUFDLGtCQUFEO0FBQUEsY0FBUSxZQUFZLENBQUNLLFFBQXJCLEVBQStCLFdBQVUsZUFBekM7QUFDSSxnQ0FBQyxRQUFEO0FBREosU0FESjtBQUlJO0FBQUMsZ0JBQUQ7QUFBQSxjQUFNLFdBQVUsV0FBaEI7QUFDS1osd0JBQVliLFNBQVosRUFBdUJHLFVBQXZCLEVBQW1DTCxRQUFuQyxFQUE2Q21CLE1BQTdDLEVBQXFEQyxhQUFyRCxFQUFvRUMsWUFBcEUsRUFBa0ZDLG1CQUFsRixDQURMO0FBRUtQLHdCQUFZYixTQUFaLEVBQXVCRyxVQUF2QixFQUFtQ0osU0FBbkMsRUFBOENrQixNQUE5QyxFQUFzREMsYUFBdEQsRUFBcUVDLFlBQXJFLEVBQW1GQyxtQkFBbkYsQ0FGTDtBQUdLUCx3QkFDR1osU0FESCxFQUVHdUIsWUFBWW5CLG1CQUFaLEdBQWtDRCxpQkFGckMsRUFHR04sUUFISCxFQUlHbUIsTUFKSCxFQUtHQyxhQUxILEVBTUdDLFlBTkgsRUFPR0MsbUJBUEgsQ0FITDtBQVlLUCx3QkFDR1osU0FESCxFQUVHdUIsWUFBWW5CLG1CQUFaLEdBQWtDRCxpQkFGckMsRUFHR0wsU0FISCxFQUlHa0IsTUFKSCxFQUtHQyxhQUxILEVBTUdDLFlBTkgsRUFPR0MsbUJBUEgsQ0FaTDtBQXFCS1Asd0JBQVlYLFNBQVosRUFBdUJJLFVBQXZCLEVBQW1DUixRQUFuQyxFQUE2Q21CLE1BQTdDLEVBQXFEQyxhQUFyRCxFQUFvRUMsWUFBcEUsRUFBa0ZDLG1CQUFsRixDQXJCTDtBQXNCS1Asd0JBQVlYLFNBQVosRUFBdUJJLFVBQXZCLEVBQW1DUCxTQUFuQyxFQUE4Q2tCLE1BQTlDLEVBQXNEQyxhQUF0RCxFQUFxRUMsWUFBckUsRUFBbUZDLG1CQUFuRjtBQXRCTDtBQUpKLEtBRFM7QUFBQSxDQUFiOztBQStCQSxlQUFlRyxJQUFmIiwiZmlsZSI6IlNvcnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZsb3dcclxuICogQGZpbGUgQ29udGVudCBzdWIgaGVhZGVyIGNvbXBvbmVudFxyXG4gKiBAYXV0aG9yIEJveFxyXG4gKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7XHJcbiAgICBTT1JUX0FTQyxcclxuICAgIFNPUlRfREVTQyxcclxuICAgIFNPUlRfTkFNRSxcclxuICAgIFNPUlRfREFURSxcclxuICAgIFNPUlRfU0laRSxcclxuICAgIEZJRUxEX05BTUUsXHJcbiAgICBGSUVMRF9NT0RJRklFRF9BVCxcclxuICAgIEZJRUxEX0lOVEVSQUNURURfQVQsXHJcbiAgICBGSUVMRF9TSVpFXHJcbn0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuaW1wb3J0IERyb3Bkb3duTWVudSBmcm9tICcuLi9Ecm9wZG93bk1lbnUnO1xyXG5pbXBvcnQgeyBNZW51LCBNZW51SXRlbSB9IGZyb20gJy4uL01lbnUnO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9CdXR0b24nO1xyXG5pbXBvcnQgSWNvblNvcnQgZnJvbSAnLi4vaWNvbnMvSWNvblNvcnQnO1xyXG5pbXBvcnQgSWNvbkNoZWNrIGZyb20gJy4uL2ljb25zL0ljb25DaGVjayc7XHJcbmltcG9ydCB0eXBlIHsgU29ydEJ5LCBTb3J0RGlyZWN0aW9uLCBTb3J0YWJsZU9wdGlvbnMgfSBmcm9tICcuLi8uLi9mbG93VHlwZXMnO1xyXG5pbXBvcnQgJy4vU29ydC5zY3NzJztcclxuXHJcbnR5cGUgUHJvcHMgPSB7XHJcbiAgICBvblNvcnRDaGFuZ2U6IEZ1bmN0aW9uLFxyXG4gICAgaXNMb2FkZWQ6IGJvb2xlYW4sXHJcbiAgICBnZXRMb2NhbGl6ZWRNZXNzYWdlOiBGdW5jdGlvbixcclxuICAgIHNvcnRCeTogU29ydEJ5LFxyXG4gICAgc29ydERpcmVjdGlvbjogU29ydERpcmVjdGlvbixcclxuICAgIGlzUmVjZW50czogYm9vbGVhblxyXG59O1xyXG5cclxuZnVuY3Rpb24gZ2V0TWVudUl0ZW0oXHJcbiAgICBzb3J0OiBTb3J0YWJsZU9wdGlvbnMsXHJcbiAgICBieTogU29ydEJ5LFxyXG4gICAgZGlyZWN0aW9uOiBTb3J0RGlyZWN0aW9uLFxyXG4gICAgc29ydEJ5OiBTb3J0QnksXHJcbiAgICBzb3J0RGlyZWN0aW9uOiBTb3J0RGlyZWN0aW9uLFxyXG4gICAgb25Tb3J0Q2hhbmdlOiBGdW5jdGlvbixcclxuICAgIGdldExvY2FsaXplZE1lc3NhZ2U6IEZ1bmN0aW9uXHJcbik6IFJlYWN0JEVsZW1lbnQ8TWVudUl0ZW0+IHtcclxuICAgIGNvbnN0IGlzU2FtZSA9IGJ5ID09PSBzb3J0QnkgJiYgZGlyZWN0aW9uID09PSBzb3J0RGlyZWN0aW9uO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8TWVudUl0ZW0gb25DbGljaz17KCkgPT4gb25Tb3J0Q2hhbmdlKGJ5LCBkaXJlY3Rpb24pfT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2J1aWstc29ydC1zZWxlY3RlZCc+XHJcbiAgICAgICAgICAgICAgICB7aXNTYW1lID8gPEljb25DaGVjayB3aWR0aD17MTJ9IGhlaWdodD17MTB9IC8+IDogbnVsbH1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIHtnZXRMb2NhbGl6ZWRNZXNzYWdlKGBidWlrLnNvcnQub3B0aW9uLiR7c29ydH0uJHtkaXJlY3Rpb24udG9Mb3dlckNhc2UoKX1gKX1cclxuICAgICAgICA8L01lbnVJdGVtPlxyXG4gICAgKTtcclxufVxyXG5cclxuY29uc3QgU29ydCA9ICh7IGlzUmVjZW50cywgaXNMb2FkZWQsIHNvcnRCeSwgc29ydERpcmVjdGlvbiwgb25Tb3J0Q2hhbmdlLCBnZXRMb2NhbGl6ZWRNZXNzYWdlIH06IFByb3BzKSA9PlxyXG4gICAgPERyb3Bkb3duTWVudSBpc1JpZ2h0QWxpZ25lZCBjb25zdHJhaW5Ub1Njcm9sbFBhcmVudD5cclxuICAgICAgICA8QnV0dG9uIGlzRGlzYWJsZWQ9eyFpc0xvYWRlZH0gY2xhc3NOYW1lPSdidWlrLXNvcnQtYnRuJz5cclxuICAgICAgICAgICAgPEljb25Tb3J0IC8+XHJcbiAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPE1lbnUgY2xhc3NOYW1lPSdidWlrLXNvcnQnPlxyXG4gICAgICAgICAgICB7Z2V0TWVudUl0ZW0oU09SVF9OQU1FLCBGSUVMRF9OQU1FLCBTT1JUX0FTQywgc29ydEJ5LCBzb3J0RGlyZWN0aW9uLCBvblNvcnRDaGFuZ2UsIGdldExvY2FsaXplZE1lc3NhZ2UpfVxyXG4gICAgICAgICAgICB7Z2V0TWVudUl0ZW0oU09SVF9OQU1FLCBGSUVMRF9OQU1FLCBTT1JUX0RFU0MsIHNvcnRCeSwgc29ydERpcmVjdGlvbiwgb25Tb3J0Q2hhbmdlLCBnZXRMb2NhbGl6ZWRNZXNzYWdlKX1cclxuICAgICAgICAgICAge2dldE1lbnVJdGVtKFxyXG4gICAgICAgICAgICAgICAgU09SVF9EQVRFLFxyXG4gICAgICAgICAgICAgICAgaXNSZWNlbnRzID8gRklFTERfSU5URVJBQ1RFRF9BVCA6IEZJRUxEX01PRElGSUVEX0FULFxyXG4gICAgICAgICAgICAgICAgU09SVF9BU0MsXHJcbiAgICAgICAgICAgICAgICBzb3J0QnksXHJcbiAgICAgICAgICAgICAgICBzb3J0RGlyZWN0aW9uLFxyXG4gICAgICAgICAgICAgICAgb25Tb3J0Q2hhbmdlLFxyXG4gICAgICAgICAgICAgICAgZ2V0TG9jYWxpemVkTWVzc2FnZVxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7Z2V0TWVudUl0ZW0oXHJcbiAgICAgICAgICAgICAgICBTT1JUX0RBVEUsXHJcbiAgICAgICAgICAgICAgICBpc1JlY2VudHMgPyBGSUVMRF9JTlRFUkFDVEVEX0FUIDogRklFTERfTU9ESUZJRURfQVQsXHJcbiAgICAgICAgICAgICAgICBTT1JUX0RFU0MsXHJcbiAgICAgICAgICAgICAgICBzb3J0QnksXHJcbiAgICAgICAgICAgICAgICBzb3J0RGlyZWN0aW9uLFxyXG4gICAgICAgICAgICAgICAgb25Tb3J0Q2hhbmdlLFxyXG4gICAgICAgICAgICAgICAgZ2V0TG9jYWxpemVkTWVzc2FnZVxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7Z2V0TWVudUl0ZW0oU09SVF9TSVpFLCBGSUVMRF9TSVpFLCBTT1JUX0FTQywgc29ydEJ5LCBzb3J0RGlyZWN0aW9uLCBvblNvcnRDaGFuZ2UsIGdldExvY2FsaXplZE1lc3NhZ2UpfVxyXG4gICAgICAgICAgICB7Z2V0TWVudUl0ZW0oU09SVF9TSVpFLCBGSUVMRF9TSVpFLCBTT1JUX0RFU0MsIHNvcnRCeSwgc29ydERpcmVjdGlvbiwgb25Tb3J0Q2hhbmdlLCBnZXRMb2NhbGl6ZWRNZXNzYWdlKX1cclxuICAgICAgICA8L01lbnU+XHJcbiAgICA8L0Ryb3Bkb3duTWVudT47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTb3J0O1xyXG4iXX0=