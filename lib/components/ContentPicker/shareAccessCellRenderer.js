/**
 * 
 * @file Function to render the share access table cell
 * @author Box
 */

import React from 'react';
import isRowSelectable from './cellRendererHelper';
import ShareAccessSelect from '../ShareAccessSelect';


export default (function (onChange, canSetShareAccess, selectableType, extensionsWhitelist, hasHitSelectionLimit, getLocalizedMessage) {
    return function (_ref) {
        var rowData = _ref.rowData;

        if (!isRowSelectable(selectableType, extensionsWhitelist, hasHitSelectionLimit, rowData)) {
            return React.createElement('span', null);
        }

        return React.createElement(ShareAccessSelect, {
            className: 'bcp-shared-access-select',
            canSetShareAccess: canSetShareAccess,
            onChange: onChange,
            item: rowData,
            getLocalizedMessage: getLocalizedMessage
        });
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlQWNjZXNzQ2VsbFJlbmRlcmVyLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiaXNSb3dTZWxlY3RhYmxlIiwiU2hhcmVBY2Nlc3NTZWxlY3QiLCJvbkNoYW5nZSIsImNhblNldFNoYXJlQWNjZXNzIiwic2VsZWN0YWJsZVR5cGUiLCJleHRlbnNpb25zV2hpdGVsaXN0IiwiaGFzSGl0U2VsZWN0aW9uTGltaXQiLCJnZXRMb2NhbGl6ZWRNZXNzYWdlIiwicm93RGF0YSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQU1BLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxlQUFQLE1BQTRCLHNCQUE1QjtBQUNBLE9BQU9DLGlCQUFQLE1BQThCLHNCQUE5Qjs7O0FBR0EsZ0JBQWUsVUFDWEMsUUFEVyxFQUVYQyxpQkFGVyxFQUdYQyxjQUhXLEVBSVhDLG1CQUpXLEVBS1hDLG9CQUxXLEVBTVhDLG1CQU5XO0FBQUEsV0FPVixnQkFBdUM7QUFBQSxZQUFwQ0MsT0FBb0MsUUFBcENBLE9BQW9DOztBQUN4QyxZQUFJLENBQUNSLGdCQUFnQkksY0FBaEIsRUFBZ0NDLG1CQUFoQyxFQUFxREMsb0JBQXJELEVBQTJFRSxPQUEzRSxDQUFMLEVBQTBGO0FBQ3RGLG1CQUFPLGlDQUFQO0FBQ0g7O0FBRUQsZUFDSSxvQkFBQyxpQkFBRDtBQUNJLHVCQUFVLDBCQURkO0FBRUksK0JBQW1CTCxpQkFGdkI7QUFHSSxzQkFBVUQsUUFIZDtBQUlJLGtCQUFNTSxPQUpWO0FBS0ksaUNBQXFCRDtBQUx6QixVQURKO0FBU0gsS0FyQmM7QUFBQSxDQUFmIiwiZmlsZSI6InNoYXJlQWNjZXNzQ2VsbFJlbmRlcmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmbG93XHJcbiAqIEBmaWxlIEZ1bmN0aW9uIHRvIHJlbmRlciB0aGUgc2hhcmUgYWNjZXNzIHRhYmxlIGNlbGxcclxuICogQGF1dGhvciBCb3hcclxuICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgaXNSb3dTZWxlY3RhYmxlIGZyb20gJy4vY2VsbFJlbmRlcmVySGVscGVyJztcclxuaW1wb3J0IFNoYXJlQWNjZXNzU2VsZWN0IGZyb20gJy4uL1NoYXJlQWNjZXNzU2VsZWN0JztcclxuaW1wb3J0IHR5cGUgeyBCb3hJdGVtIH0gZnJvbSAnLi4vLi4vZmxvd1R5cGVzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChcclxuICAgIG9uQ2hhbmdlOiBGdW5jdGlvbixcclxuICAgIGNhblNldFNoYXJlQWNjZXNzOiBib29sZWFuLFxyXG4gICAgc2VsZWN0YWJsZVR5cGU6IHN0cmluZyxcclxuICAgIGV4dGVuc2lvbnNXaGl0ZWxpc3Q6IHN0cmluZ1tdLFxyXG4gICAgaGFzSGl0U2VsZWN0aW9uTGltaXQ6IGJvb2xlYW4sXHJcbiAgICBnZXRMb2NhbGl6ZWRNZXNzYWdlOiBGdW5jdGlvblxyXG4pID0+ICh7IHJvd0RhdGEgfTogeyByb3dEYXRhOiBCb3hJdGVtIH0pID0+IHtcclxuICAgIGlmICghaXNSb3dTZWxlY3RhYmxlKHNlbGVjdGFibGVUeXBlLCBleHRlbnNpb25zV2hpdGVsaXN0LCBoYXNIaXRTZWxlY3Rpb25MaW1pdCwgcm93RGF0YSkpIHtcclxuICAgICAgICByZXR1cm4gPHNwYW4gLz47XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8U2hhcmVBY2Nlc3NTZWxlY3RcclxuICAgICAgICAgICAgY2xhc3NOYW1lPSdiY3Atc2hhcmVkLWFjY2Vzcy1zZWxlY3QnXHJcbiAgICAgICAgICAgIGNhblNldFNoYXJlQWNjZXNzPXtjYW5TZXRTaGFyZUFjY2Vzc31cclxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAgICAgICBpdGVtPXtyb3dEYXRhfVxyXG4gICAgICAgICAgICBnZXRMb2NhbGl6ZWRNZXNzYWdlPXtnZXRMb2NhbGl6ZWRNZXNzYWdlfVxyXG4gICAgICAgIC8+XHJcbiAgICApO1xyXG59O1xyXG4iXX0=