/**
 * 
 * @file Timeline line component
 * @author Box
 */

import React from 'react';
import { PlainButton } from '../Button';
import { BOX_BLUE } from '../../constants';


var LENGTH_IMAGE_ITEMLINE = 215;
var LENGTH_TEXT_ITEMLINE = 270;

var Line = function Line(_ref) {
    var type = _ref.type,
        start = _ref.start,
        _ref$end = _ref.end,
        end = _ref$end === undefined ? 0 : _ref$end,
        duration = _ref.duration,
        _ref$color = _ref.color,
        color = _ref$color === undefined ? BOX_BLUE : _ref$color,
        getPreviewer = _ref.getPreviewer;

    if (typeof start !== 'number' || !duration) {
        return null;
    }
    var barLength = type === 'image' ? LENGTH_IMAGE_ITEMLINE : LENGTH_TEXT_ITEMLINE;
    var startLeft = Math.round(start * barLength / duration);
    var endLeft = Math.round(Math.min(barLength, Math.max(startLeft + 6, end * barLength / duration)));
    var styles = {
        backgroundColor: color,
        left: startLeft + 'px',
        width: endLeft - startLeft + 'px'
    };
    var onClick = function onClick() {
        var viewer = getPreviewer ? getPreviewer() : null;
        if (viewer && viewer.isLoaded() && !viewer.isDestroyed() && typeof viewer.play === 'function') {
            viewer.play(start);
        }
    };
    return React.createElement(PlainButton, { className: 'buik-timeline-time', style: styles, onClick: onClick });
};

export default Line;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmUuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQbGFpbkJ1dHRvbiIsIkJPWF9CTFVFIiwiTEVOR1RIX0lNQUdFX0lURU1MSU5FIiwiTEVOR1RIX1RFWFRfSVRFTUxJTkUiLCJMaW5lIiwidHlwZSIsInN0YXJ0IiwiZW5kIiwiZHVyYXRpb24iLCJjb2xvciIsImdldFByZXZpZXdlciIsImJhckxlbmd0aCIsInN0YXJ0TGVmdCIsIk1hdGgiLCJyb3VuZCIsImVuZExlZnQiLCJtaW4iLCJtYXgiLCJzdHlsZXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJsZWZ0Iiwid2lkdGgiLCJvbkNsaWNrIiwidmlld2VyIiwiaXNMb2FkZWQiLCJpc0Rlc3Ryb3llZCIsInBsYXkiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFNQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsU0FBU0MsV0FBVCxRQUE0QixXQUE1QjtBQUNBLFNBQVNDLFFBQVQsUUFBeUIsaUJBQXpCOzs7QUFhQSxJQUFNQyx3QkFBd0IsR0FBOUI7QUFDQSxJQUFNQyx1QkFBdUIsR0FBN0I7O0FBRUEsSUFBTUMsT0FBTyxTQUFQQSxJQUFPLE9BQStFO0FBQUEsUUFBNUVDLElBQTRFLFFBQTVFQSxJQUE0RTtBQUFBLFFBQXRFQyxLQUFzRSxRQUF0RUEsS0FBc0U7QUFBQSx3QkFBL0RDLEdBQStEO0FBQUEsUUFBL0RBLEdBQStELDRCQUF6RCxDQUF5RDtBQUFBLFFBQXREQyxRQUFzRCxRQUF0REEsUUFBc0Q7QUFBQSwwQkFBNUNDLEtBQTRDO0FBQUEsUUFBNUNBLEtBQTRDLDhCQUFwQ1IsUUFBb0M7QUFBQSxRQUExQlMsWUFBMEIsUUFBMUJBLFlBQTBCOztBQUN4RixRQUFJLE9BQU9KLEtBQVAsS0FBaUIsUUFBakIsSUFBNkIsQ0FBQ0UsUUFBbEMsRUFBNEM7QUFDeEMsZUFBTyxJQUFQO0FBQ0g7QUFDRCxRQUFNRyxZQUFZTixTQUFTLE9BQVQsR0FBbUJILHFCQUFuQixHQUEyQ0Msb0JBQTdEO0FBQ0EsUUFBTVMsWUFBWUMsS0FBS0MsS0FBTCxDQUFXUixRQUFRSyxTQUFSLEdBQW9CSCxRQUEvQixDQUFsQjtBQUNBLFFBQU1PLFVBQVVGLEtBQUtDLEtBQUwsQ0FBV0QsS0FBS0csR0FBTCxDQUFTTCxTQUFULEVBQW9CRSxLQUFLSSxHQUFMLENBQVNMLFlBQVksQ0FBckIsRUFBd0JMLE1BQU1JLFNBQU4sR0FBa0JILFFBQTFDLENBQXBCLENBQVgsQ0FBaEI7QUFDQSxRQUFNVSxTQUFTO0FBQ1hDLHlCQUFpQlYsS0FETjtBQUVYVyxjQUFTUixTQUFULE9BRlc7QUFHWFMsZUFBVU4sVUFBVUgsU0FBcEI7QUFIVyxLQUFmO0FBS0EsUUFBTVUsVUFBVSxTQUFWQSxPQUFVLEdBQU07QUFDbEIsWUFBTUMsU0FBU2IsZUFBZUEsY0FBZixHQUFnQyxJQUEvQztBQUNBLFlBQUlhLFVBQVVBLE9BQU9DLFFBQVAsRUFBVixJQUErQixDQUFDRCxPQUFPRSxXQUFQLEVBQWhDLElBQXdELE9BQU9GLE9BQU9HLElBQWQsS0FBdUIsVUFBbkYsRUFBK0Y7QUFDM0ZILG1CQUFPRyxJQUFQLENBQVlwQixLQUFaO0FBQ0g7QUFDSixLQUxEO0FBTUEsV0FBTyxvQkFBQyxXQUFELElBQWEsV0FBVSxvQkFBdkIsRUFBNEMsT0FBT1ksTUFBbkQsRUFBMkQsU0FBU0ksT0FBcEUsR0FBUDtBQUNILENBbkJEOztBQXFCQSxlQUFlbEIsSUFBZiIsImZpbGUiOiJMaW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmbG93XHJcbiAqIEBmaWxlIFRpbWVsaW5lIGxpbmUgY29tcG9uZW50XHJcbiAqIEBhdXRob3IgQm94XHJcbiAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgUGxhaW5CdXR0b24gfSBmcm9tICcuLi9CdXR0b24nO1xyXG5pbXBvcnQgeyBCT1hfQkxVRSB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcbmltcG9ydCB0eXBlIHsgU2tpbGxEYXRhRW50cnlUeXBlIH0gZnJvbSAnLi4vLi4vZmxvd1R5cGVzJztcclxuaW1wb3J0ICcuL0xpbmUuc2Nzcyc7XHJcblxyXG50eXBlIFByb3BzID0ge1xyXG4gICAgdHlwZTogU2tpbGxEYXRhRW50cnlUeXBlLFxyXG4gICAgc3RhcnQ6IG51bWJlcixcclxuICAgIGR1cmF0aW9uOiBudW1iZXIsXHJcbiAgICBjb2xvcj86IHN0cmluZyxcclxuICAgIGVuZD86IG51bWJlcixcclxuICAgIGdldFByZXZpZXdlcj86IEZ1bmN0aW9uXHJcbn07XHJcblxyXG5jb25zdCBMRU5HVEhfSU1BR0VfSVRFTUxJTkUgPSAyMTU7XHJcbmNvbnN0IExFTkdUSF9URVhUX0lURU1MSU5FID0gMjcwO1xyXG5cclxuY29uc3QgTGluZSA9ICh7IHR5cGUsIHN0YXJ0LCBlbmQgPSAwLCBkdXJhdGlvbiwgY29sb3IgPSBCT1hfQkxVRSwgZ2V0UHJldmlld2VyIH06IFByb3BzKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIHN0YXJ0ICE9PSAnbnVtYmVyJyB8fCAhZHVyYXRpb24pIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIGNvbnN0IGJhckxlbmd0aCA9IHR5cGUgPT09ICdpbWFnZScgPyBMRU5HVEhfSU1BR0VfSVRFTUxJTkUgOiBMRU5HVEhfVEVYVF9JVEVNTElORTtcclxuICAgIGNvbnN0IHN0YXJ0TGVmdCA9IE1hdGgucm91bmQoc3RhcnQgKiBiYXJMZW5ndGggLyBkdXJhdGlvbik7XHJcbiAgICBjb25zdCBlbmRMZWZ0ID0gTWF0aC5yb3VuZChNYXRoLm1pbihiYXJMZW5ndGgsIE1hdGgubWF4KHN0YXJ0TGVmdCArIDYsIGVuZCAqIGJhckxlbmd0aCAvIGR1cmF0aW9uKSkpO1xyXG4gICAgY29uc3Qgc3R5bGVzID0ge1xyXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IsXHJcbiAgICAgICAgbGVmdDogYCR7c3RhcnRMZWZ0fXB4YCxcclxuICAgICAgICB3aWR0aDogYCR7ZW5kTGVmdCAtIHN0YXJ0TGVmdH1weGBcclxuICAgIH07XHJcbiAgICBjb25zdCBvbkNsaWNrID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHZpZXdlciA9IGdldFByZXZpZXdlciA/IGdldFByZXZpZXdlcigpIDogbnVsbDtcclxuICAgICAgICBpZiAodmlld2VyICYmIHZpZXdlci5pc0xvYWRlZCgpICYmICF2aWV3ZXIuaXNEZXN0cm95ZWQoKSAmJiB0eXBlb2Ygdmlld2VyLnBsYXkgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgdmlld2VyLnBsYXkoc3RhcnQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gPFBsYWluQnV0dG9uIGNsYXNzTmFtZT0nYnVpay10aW1lbGluZS10aW1lJyBzdHlsZT17c3R5bGVzfSBvbkNsaWNrPXtvbkNsaWNrfSAvPjtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExpbmU7XHJcbiJdfQ==