/**
 * 
 * @file Content Explorer Preview dialog
 * @author Box
 */

import React from 'react';
import Modal from 'react-modal';
import cloneDeep from 'lodash.clonedeep';
import ContentPreview from '../ContentPreview';
import { TYPE_FILE, CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../constants';
import Cache from '../../util/Cache';


var PreviewDialog = function PreviewDialog(_ref) {
    var item = _ref.item,
        isOpen = _ref.isOpen,
        getLocalizedMessage = _ref.getLocalizedMessage,
        parentElement = _ref.parentElement,
        token = _ref.token,
        cache = _ref.cache,
        currentCollection = _ref.currentCollection,
        hasPreviewSidebar = _ref.hasPreviewSidebar,
        onCancel = _ref.onCancel,
        onPreview = _ref.onPreview,
        apiHost = _ref.apiHost,
        appHost = _ref.appHost,
        staticHost = _ref.staticHost;
    var items = currentCollection.items;

    var onLoad = function onLoad(data) {
        onPreview(cloneDeep(data));
    };

    if (!item || !items || !isOpen) {
        return null;
    }

    var files = items.filter(function (_ref2) {
        var type = _ref2.type;
        return type === TYPE_FILE;
    });
    return React.createElement(
        Modal,
        {
            isOpen: isOpen,
            parentSelector: function parentSelector() {
                return parentElement;
            },
            portalClassName: CLASS_MODAL + ' buik-modal-preview',
            className: CLASS_MODAL_CONTENT_FULL_BLEED,
            overlayClassName: CLASS_MODAL_OVERLAY,
            contentLabel: getLocalizedMessage('buik.modal.preview.dialog.label'),
            onRequestClose: onCancel
        },
        React.createElement(ContentPreview, {
            skipServerUpdate: true,
            apiHost: apiHost,
            appHost: appHost,
            staticHost: staticHost,
            cache: cache,
            file: item,
            token: token,
            hasHeader: true,
            collection: files,
            onLoad: onLoad,
            onClose: onCancel,
            hasSidebar: hasPreviewSidebar,
            getLocalizedMessage: getLocalizedMessage
        })
    );
};

export default PreviewDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByZXZpZXdEaWFsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJNb2RhbCIsImNsb25lRGVlcCIsIkNvbnRlbnRQcmV2aWV3IiwiVFlQRV9GSUxFIiwiQ0xBU1NfTU9EQUxfQ09OVEVOVF9GVUxMX0JMRUVEIiwiQ0xBU1NfTU9EQUxfT1ZFUkxBWSIsIkNMQVNTX01PREFMIiwiQ2FjaGUiLCJQcmV2aWV3RGlhbG9nIiwiaXRlbSIsImlzT3BlbiIsImdldExvY2FsaXplZE1lc3NhZ2UiLCJwYXJlbnRFbGVtZW50IiwidG9rZW4iLCJjYWNoZSIsImN1cnJlbnRDb2xsZWN0aW9uIiwiaGFzUHJldmlld1NpZGViYXIiLCJvbkNhbmNlbCIsIm9uUHJldmlldyIsImFwaUhvc3QiLCJhcHBIb3N0Iiwic3RhdGljSG9zdCIsIml0ZW1zIiwib25Mb2FkIiwiZGF0YSIsImZpbGVzIiwiZmlsdGVyIiwidHlwZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQU1BLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLGFBQWxCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixrQkFBdEI7QUFDQSxPQUFPQyxjQUFQLE1BQTJCLG1CQUEzQjtBQUNBLFNBQVNDLFNBQVQsRUFBb0JDLDhCQUFwQixFQUFvREMsbUJBQXBELEVBQXlFQyxXQUF6RSxRQUE0RixpQkFBNUY7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLGtCQUFsQjs7O0FBb0JBLElBQU1DLGdCQUFnQixTQUFoQkEsYUFBZ0IsT0FjVDtBQUFBLFFBYlRDLElBYVMsUUFiVEEsSUFhUztBQUFBLFFBWlRDLE1BWVMsUUFaVEEsTUFZUztBQUFBLFFBWFRDLG1CQVdTLFFBWFRBLG1CQVdTO0FBQUEsUUFWVEMsYUFVUyxRQVZUQSxhQVVTO0FBQUEsUUFUVEMsS0FTUyxRQVRUQSxLQVNTO0FBQUEsUUFSVEMsS0FRUyxRQVJUQSxLQVFTO0FBQUEsUUFQVEMsaUJBT1MsUUFQVEEsaUJBT1M7QUFBQSxRQU5UQyxpQkFNUyxRQU5UQSxpQkFNUztBQUFBLFFBTFRDLFFBS1MsUUFMVEEsUUFLUztBQUFBLFFBSlRDLFNBSVMsUUFKVEEsU0FJUztBQUFBLFFBSFRDLE9BR1MsUUFIVEEsT0FHUztBQUFBLFFBRlRDLE9BRVMsUUFGVEEsT0FFUztBQUFBLFFBRFRDLFVBQ1MsUUFEVEEsVUFDUztBQUFBLFFBQ0RDLEtBREMsR0FDcUJQLGlCQURyQixDQUNETyxLQURDOztBQUVULFFBQU1DLFNBQVMsU0FBVEEsTUFBUyxDQUFDQyxJQUFELEVBQXFCO0FBQ2hDTixrQkFBVWpCLFVBQVV1QixJQUFWLENBQVY7QUFDSCxLQUZEOztBQUlBLFFBQUksQ0FBQ2YsSUFBRCxJQUFTLENBQUNhLEtBQVYsSUFBbUIsQ0FBQ1osTUFBeEIsRUFBZ0M7QUFDNUIsZUFBTyxJQUFQO0FBQ0g7O0FBRUQsUUFBTWUsUUFBbUJILE1BQU1JLE1BQU4sQ0FBYTtBQUFBLFlBQUdDLElBQUgsU0FBR0EsSUFBSDtBQUFBLGVBQWNBLFNBQVN4QixTQUF2QjtBQUFBLEtBQWIsQ0FBekI7QUFDQSxXQUNJO0FBQUMsYUFBRDtBQUFBO0FBQ0ksb0JBQVFPLE1BRFo7QUFFSSw0QkFBZ0I7QUFBQSx1QkFBTUUsYUFBTjtBQUFBLGFBRnBCO0FBR0ksNkJBQW9CTixXQUFwQix3QkFISjtBQUlJLHVCQUFXRiw4QkFKZjtBQUtJLDhCQUFrQkMsbUJBTHRCO0FBTUksMEJBQWNNLG9CQUFvQixpQ0FBcEIsQ0FObEI7QUFPSSw0QkFBZ0JNO0FBUHBCO0FBU0ksNEJBQUMsY0FBRDtBQUNJLGtDQURKO0FBRUkscUJBQVNFLE9BRmI7QUFHSSxxQkFBU0MsT0FIYjtBQUlJLHdCQUFZQyxVQUpoQjtBQUtJLG1CQUFPUCxLQUxYO0FBTUksa0JBQU1MLElBTlY7QUFPSSxtQkFBT0ksS0FQWDtBQVFJLDJCQVJKO0FBU0ksd0JBQVlZLEtBVGhCO0FBVUksb0JBQVFGLE1BVlo7QUFXSSxxQkFBU04sUUFYYjtBQVlJLHdCQUFZRCxpQkFaaEI7QUFhSSxpQ0FBcUJMO0FBYnpCO0FBVEosS0FESjtBQTJCSCxDQXBERDs7QUFzREEsZUFBZUgsYUFBZiIsImZpbGUiOiJQcmV2aWV3RGlhbG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmbG93XHJcbiAqIEBmaWxlIENvbnRlbnQgRXhwbG9yZXIgUHJldmlldyBkaWFsb2dcclxuICogQGF1dGhvciBCb3hcclxuICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xyXG5pbXBvcnQgY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC5jbG9uZWRlZXAnO1xyXG5pbXBvcnQgQ29udGVudFByZXZpZXcgZnJvbSAnLi4vQ29udGVudFByZXZpZXcnO1xyXG5pbXBvcnQgeyBUWVBFX0ZJTEUsIENMQVNTX01PREFMX0NPTlRFTlRfRlVMTF9CTEVFRCwgQ0xBU1NfTU9EQUxfT1ZFUkxBWSwgQ0xBU1NfTU9EQUwgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgQ2FjaGUgZnJvbSAnLi4vLi4vdXRpbC9DYWNoZSc7XHJcbmltcG9ydCB0eXBlIHsgQm94SXRlbSwgQ29sbGVjdGlvbiwgVG9rZW4gfSBmcm9tICcuLi8uLi9mbG93VHlwZXMnO1xyXG5cclxudHlwZSBQcm9wcyA9IHtcclxuICAgIGlzT3BlbjogYm9vbGVhbixcclxuICAgIGN1cnJlbnRDb2xsZWN0aW9uOiBDb2xsZWN0aW9uLFxyXG4gICAgb25DYW5jZWw6IEZ1bmN0aW9uLFxyXG4gICAgaXRlbTogQm94SXRlbSxcclxuICAgIHRva2VuOiBUb2tlbixcclxuICAgIGdldExvY2FsaXplZE1lc3NhZ2U6IEZ1bmN0aW9uLFxyXG4gICAgcGFyZW50RWxlbWVudDogSFRNTEVsZW1lbnQsXHJcbiAgICBpc1RvdWNoOiBib29sZWFuLFxyXG4gICAgb25QcmV2aWV3OiBGdW5jdGlvbixcclxuICAgIGhhc1ByZXZpZXdTaWRlYmFyOiBib29sZWFuLFxyXG4gICAgY2FjaGU6IENhY2hlLFxyXG4gICAgYXBpSG9zdDogc3RyaW5nLFxyXG4gICAgYXBwSG9zdDogc3RyaW5nLFxyXG4gICAgc3RhdGljSG9zdDogc3RyaW5nXHJcbn07XHJcblxyXG5jb25zdCBQcmV2aWV3RGlhbG9nID0gKHtcclxuICAgIGl0ZW0sXHJcbiAgICBpc09wZW4sXHJcbiAgICBnZXRMb2NhbGl6ZWRNZXNzYWdlLFxyXG4gICAgcGFyZW50RWxlbWVudCxcclxuICAgIHRva2VuLFxyXG4gICAgY2FjaGUsXHJcbiAgICBjdXJyZW50Q29sbGVjdGlvbixcclxuICAgIGhhc1ByZXZpZXdTaWRlYmFyLFxyXG4gICAgb25DYW5jZWwsXHJcbiAgICBvblByZXZpZXcsXHJcbiAgICBhcGlIb3N0LFxyXG4gICAgYXBwSG9zdCxcclxuICAgIHN0YXRpY0hvc3RcclxufTogUHJvcHMpID0+IHtcclxuICAgIGNvbnN0IHsgaXRlbXMgfTogQ29sbGVjdGlvbiA9IGN1cnJlbnRDb2xsZWN0aW9uO1xyXG4gICAgY29uc3Qgb25Mb2FkID0gKGRhdGE6IGFueSk6IHZvaWQgPT4ge1xyXG4gICAgICAgIG9uUHJldmlldyhjbG9uZURlZXAoZGF0YSkpO1xyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoIWl0ZW0gfHwgIWl0ZW1zIHx8ICFpc09wZW4pIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBmaWxlczogQm94SXRlbVtdID0gaXRlbXMuZmlsdGVyKCh7IHR5cGUgfSkgPT4gdHlwZSA9PT0gVFlQRV9GSUxFKTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPE1vZGFsXHJcbiAgICAgICAgICAgIGlzT3Blbj17aXNPcGVufVxyXG4gICAgICAgICAgICBwYXJlbnRTZWxlY3Rvcj17KCkgPT4gcGFyZW50RWxlbWVudH1cclxuICAgICAgICAgICAgcG9ydGFsQ2xhc3NOYW1lPXtgJHtDTEFTU19NT0RBTH0gYnVpay1tb2RhbC1wcmV2aWV3YH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtDTEFTU19NT0RBTF9DT05URU5UX0ZVTExfQkxFRUR9XHJcbiAgICAgICAgICAgIG92ZXJsYXlDbGFzc05hbWU9e0NMQVNTX01PREFMX09WRVJMQVl9XHJcbiAgICAgICAgICAgIGNvbnRlbnRMYWJlbD17Z2V0TG9jYWxpemVkTWVzc2FnZSgnYnVpay5tb2RhbC5wcmV2aWV3LmRpYWxvZy5sYWJlbCcpfVxyXG4gICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17b25DYW5jZWx9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgICA8Q29udGVudFByZXZpZXdcclxuICAgICAgICAgICAgICAgIHNraXBTZXJ2ZXJVcGRhdGVcclxuICAgICAgICAgICAgICAgIGFwaUhvc3Q9e2FwaUhvc3R9XHJcbiAgICAgICAgICAgICAgICBhcHBIb3N0PXthcHBIb3N0fVxyXG4gICAgICAgICAgICAgICAgc3RhdGljSG9zdD17c3RhdGljSG9zdH1cclxuICAgICAgICAgICAgICAgIGNhY2hlPXtjYWNoZX1cclxuICAgICAgICAgICAgICAgIGZpbGU9e2l0ZW19XHJcbiAgICAgICAgICAgICAgICB0b2tlbj17dG9rZW59XHJcbiAgICAgICAgICAgICAgICBoYXNIZWFkZXJcclxuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb249e2ZpbGVzfVxyXG4gICAgICAgICAgICAgICAgb25Mb2FkPXtvbkxvYWR9XHJcbiAgICAgICAgICAgICAgICBvbkNsb3NlPXtvbkNhbmNlbH1cclxuICAgICAgICAgICAgICAgIGhhc1NpZGViYXI9e2hhc1ByZXZpZXdTaWRlYmFyfVxyXG4gICAgICAgICAgICAgICAgZ2V0TG9jYWxpemVkTWVzc2FnZT17Z2V0TG9jYWxpemVkTWVzc2FnZX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICA8L01vZGFsPlxyXG4gICAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByZXZpZXdEaWFsb2c7XHJcbiJdfQ==